/*!
 * Carpet.js v3.0.0 (http://mateuszgachowski.github.io/Carpet.js/)
 * Copyright 2014-2014 Mateusz Gachowski <mateusz.gachowski@gmail.com>
 * Licensed under MIT (https://github.com/mateuszgachowski/Carpet.js/blob/master/LICENSE)
 */
!function(){"use strict";window.Carpet=function(){function a(){var a,b,c;return a={},b={},c=Array.prototype.slice,{loggingEnabled:!1,log:function(){this.debug.apply(this,["log"].concat(c.call(arguments)))},warn:function(){this.debug.apply(this,["warn"].concat(c.call(arguments)))},error:function(){this.debug.apply(this,["error"].concat(c.call(arguments)))},info:function(){this.debug.apply(this,["info"].concat(c.call(arguments)))},clearConsole:function(){this.debug.apply(this,["clear"])},debug:function(a){var b;this.loggingEnabled&&window.console&&window.console[a]&&window.console[a].apply&&(b=c.call(arguments,1),window.console[a].apply(window.console,["Carpet:{0}".replace("{0}",a),b]))},module:function(b,c){return a[b]?void this.warn("Module: {0} already exists. Name collision".replace("{0}",b)):(a[b]={moduleBody:c,name:b,settings:{},methods:{},component:this.getComponent},void this.info("Module: {0} has been loaded to memory".replace("{0}",b)))},registerComponent:function(a,c){b[a]&&this.warn("Component: {0} already exists. Name collision".replace("{0}",a)),b[a]={name:a,componentBody:c,initialized:!1},this.info("Component: {0} has been loaded to memory".replace("{0}",a))},getModule:function(b){return a[b]?a[b]:void this.warn("Module: {0} has not been found in memory".replace("{0}",b))},getComponent:function(a){var c;return(c=b[a])?(c.initialized||(c.initialized=!0,c.instance=c.componentBody.call(c)),c.instance):void this.warn("Component: {0} has not been found in memory".replace("{0}",a))},init:function(){for(var b=document.querySelectorAll("[data-module]"),c=0;c<b.length;c++){var d,e,f,g;d=b[c],e=d.getAttribute("data-module"),f=new Function("return "+d.getAttribute("data-settings"))()||{},g=a[e],g?(g.settings=f,g.moduleBody.call(g,g.methods,g.settings,d),"function"==typeof g.methods.init&&(this.info("Module: {0} has been autoinited".replace("{0}",g.name)),g.methods.init())):this.warn("Module: {0} has not been found".replace("{0}",e))}}}}return new a}()}();